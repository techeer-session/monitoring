services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DJANGO_SETTINGS_MODULE: your_project.settings
      OTEL_SERVICE_NAME: django-service
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      DB_HOST: db
    depends_on:
      - redis
      - otel-collector
      - db
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: your_project.settings
      CELERY_BROKER_URL: redis://redis:6379/0
      OTEL_SERVICE_NAME: celery-service
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      DB_HOST: db
    depends_on:
      - redis
      - otel-collector
      - db
    command: celery -A your_project worker --loglevel=info
    volumes:
      - .:/app

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686" # 화면
      - "14268:14268" # http
      - "14250:14250" # grpc

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    ports:
      - "4317:4317" # grpc
      - "55681:55681" # http
    volumes:
      - ./opentelemetry/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config", "/etc/otel-collector-config.yaml"]

volumes:
  postgres_data: